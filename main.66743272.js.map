{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","tableBody","sorted","formOptions","sortRows","index","sortedRows","rows","sort","rowA","rowB","cellA","cells","innerText","cellB","includes","newCellA","replace","newCellB","append","addEventListener","e","target","cellIndex","undefined","targetRow","closest","forEach","row","classList","remove","add","body","insertAdjacentHTML","pushNotification","title","description","type","posTop","posRight","notification","createElement","dataset","qa","style","top","right","notificationText","setTimeout","isValid","key","value","length","form","preventDefault","newRow","formData","FormData","toLocaleString","reset","cell","initialText","input","options","focus","keyEvent","code","blur","valid"],"mappings":"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","file":"main.66743272.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeader = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nlet sorted = false;\n\nconst formOptions = `\n  <option value=\"Tokyo\">Tokyo</option>\n  <option value=\"Singapore\">Singapore</option>\n  <option value=\"London\">London</option>\n  <option value=\"New York\">New York</option>\n  <option value=\"Edinburgh\">Edinburgh</option>\n  <option value=\"San Francisco\">San Francisco</option>\n`;\n\nconst sortRows = function(index) {\n  const sortedRows = [...tableBody.rows].sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].innerText;\n    const cellB = rowB.cells[index].innerText;\n\n    if (cellA.includes('$')) {\n      const newCellA = cellA.replace(/[^0-9]/g, '');\n      const newCellB = cellB.replace(/[^0-9]/g, '');\n\n      if (sorted) {\n        return newCellB - newCellA;\n      }\n\n      return newCellA - newCellB;\n    }\n\n    if (sorted) {\n      return cellB > cellA ? 1 : cellB < cellA ? -1 : 0;\n    }\n\n    return cellA > cellB ? 1 : cellA < cellB ? -1 : 0;\n  });\n\n  tableBody.append(...sortedRows);\n};\n\ntableHeader.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n\n  if (index !== null || index !== undefined) {\n    sortRows(index);\n\n    sorted = !sorted;\n  }\n});\n\ntableBody.addEventListener('click', e => {\n  const targetRow = e.target.closest('tr');\n\n  if (targetRow) {\n    [...tableBody.rows].forEach(row => row.classList.remove('active'));\n\n    targetRow.classList.add('active');\n  }\n});\n\n// Form\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form\n    class=\"new-employee-form\"\n    action=\"/\"\n    method=\"post\"\n  >\n    <label>\n      Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n        required\n      >\n    </label>\n\n    <label>\n      Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n        required\n      >\n    </label>\n\n    <label>\n      Office:\n      <select\n        name=\"office\"\n        data-qa=\"office\"\n        required\n      >\n        ${formOptions}\n      </select>\n    </label>\n\n    <label>\n      Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n        required\n      >\n    </label>\n\n    <label>\n      Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        data-qa=\"salary\"\n        required\n      >\n    </label>\n\n    <button type=\"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst pushNotification = (title, description, type, posTop, posRight) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  notification.style.top = `${posTop || 10}px`;\n  notification.style.right = `${posRight || 10}px`;\n\n  const notificationText = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  notification.insertAdjacentHTML('afterbegin', notificationText);\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nconst isValid = (key, value) => {\n  if (key === 'name' && value.length < 4) {\n    pushNotification('Error',\n      'Name field must be at least 5 characters long!', 'error');\n\n    return;\n  }\n\n  if (key === 'age' && (+value < 18 || +value > 90)) {\n    pushNotification('Error', 'Age must be between 18 and 90!', 'error');\n\n    return;\n  }\n\n  return true;\n};\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const newRow = document.createElement('tr');\n  const formData = new FormData(form);\n\n  for (const [key, value] of formData) {\n    if (!isValid(key, value)) {\n      return;\n    }\n\n    if (key === 'salary') {\n      newRow.insertAdjacentHTML('beforeend',\n        `<td>$${(+value).toLocaleString('en-US')}</td>`);\n    } else {\n      newRow.insertAdjacentHTML('beforeend', `<td>${value}</td>`);\n    };\n  }\n\n  pushNotification('Success',\n    'Employee has been added successfully!', 'success');\n  tableBody.append(newRow);\n  form.reset();\n});\n\ntableBody.addEventListener('dblclick', e => {\n  const cell = e.target;\n  const index = e.target.cellIndex;\n  const initialText = cell.innerText;\n  const input = index === 2\n    ? document.createElement('select')\n    : document.createElement('input');\n\n  cell.innerText = '';\n  input.classList.add('cell-input');\n  input.value = initialText;\n\n  switch (index) {\n    case 2:\n      const options = `<option value=\"${initialText}\">${initialText}</option>`\n       + formOptions;\n\n      input.insertAdjacentHTML('beforeend', options);\n      break;\n    case 3:\n      input.type = 'number';\n      break;\n    case 4:\n      input.value = initialText.replace(/[^0-9]/g, '');\n      input.type = 'number';\n      break;\n  }\n\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('keypress', (keyEvent) => {\n    if (keyEvent.code === 'Enter') {\n      input.blur();\n    }\n  });\n\n  input.addEventListener('blur', () => {\n    let valid;\n\n    switch (index) {\n      case 0:\n        valid = isValid('name', input.value);\n        break;\n      case 3:\n        valid = isValid('age', input.value);\n        break;\n      default:\n        valid = true;\n    }\n\n    if (!valid) {\n      cell.innerText = initialText;\n    } else {\n      cell.innerText = index === 4\n        ? `$${(+input.value).toLocaleString('en-US')}`\n        : input.value;\n    }\n\n    input.remove();\n  });\n});\n"]}